*,
*::after,
*::before {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

::view-transition-old(root),
::view-transition-new(root) {
    animation-duration: .6s;
}

html {
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    -webkit-text-rendering: optimizeSpeed;
    text-rendering: optimizeSpeed;
    background-color: var(--cl-bg);
    font-kerning: none;

    &.lenis {
        height: auto;
    }
}
.main {
    opacity: 1;
    transition: opacity 300ms ease;
    &.on-load {
        opacity: 0;
    }
}

.lenis {
    &.lenis-smooth {
        scroll-behavior: auto;
    }

    &.lenis-smooth [data-lenis-prevent] {
        overscroll-behavior: contain;
    }

    &.lenis-stopped {
        overflow: hidden;
    }

    &.lenis-scrolling iframe {
        pointer-events: none;
    }
}

.main {
    position: relative;
}

.grid {
    --grid-gap: 2rem;
    display: grid;
    column-gap: var(--grid-gap);

    @include md {
        --grid-gap: 1.6rem;
    }
}

.container {
    --container-width: 1728px;
    --grid-column: 16;
    --container-padding: 6rem;
    position: relative;
    z-index: 2;
    width: 100%;
    margin: 0 auto;
    padding: 0 var(--container-padding);

    &.fluid {
        max-width: none;
    }

    &.grid {
        grid-template-columns: repeat(var(--grid-column), 1fr);
    }

    @include md {
        --grid-column: 12;
        --container-padding: 4rem;
    }

    @include sm {
        --grid-column: 4;
        --container-padding: 2rem;
    }

    @include xs {
        --container-padding: 1.6rem;
    }
}

a {
    text-decoration: none;
    color: inherit;
    display: inline-block;
}

button,
input,
textarea {
    appearance: none;
    -webkit-appearance: none;
    outline: none;
    border: none;
    font-family: inherit;
}

button {
    cursor: pointer;

    * {
        pointer-events: none;
    }
}

img,
.img {
    display: block;
    width: 100%;
    height: auto;

    &.img-h {
        height: 100%;
        width: auto;
    }

    &.img-fill {
        height: 100%;
        object-fit: cover;
    }
}

button {
    appearance: none;
    background-color: transparent;
    color: inherit;
    outline: none;
    border: none;
}

.btn {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 2rem 2.4rem;
    background-color: var(--cl-orange);
    color: var(--cl-white);
    position: relative;
    overflow: hidden;
    z-index: 1;
    
    &[data-cursor-txtlink] {
        .txt {
            transition: transform 400ms ease;
        }
        &:hover {
            .txt {
                transform: translateX(.6rem);
            }   
        }
    }
    &::before,
    &::after {
        content: '';
        position: absolute;
        height: 100%;
        width: 100%;
        bottom: 100%;
        top: 0;
        left: -100%;
        z-index: -1;
        @include transition(transform 0.3s cubic-bezier(0.75, 0, 0.125, 1));
    }

    &::before {
        background-color: #96410D;
    }

    &::after {
        background-color: #181818;
    }

    @media (hover: hover) {
        &:hover {

            &::before,
            &::after {
                @include transform(translate3d(100%, 0, 0));
            }

            &::after {
                transition-duration: .38s;
                @include transition-delay(0.08s);
            }
        }
    }


    &-lg {
        padding: 2.8rem 2.4rem;

        @include md {
            padding: 1.8rem 2.4rem;
        }
    }

    &-wide {
        width: 100%;
    }
}

.line {
    @include size(100%, .2rem);
    background-color: var(--cl-txt);

    &-ver {
        @include size(.2rem, 100%);
    }
}

body,
.bg-light {
    background: var(--bg-txt) repeat;
    background-size: 40rem auto;
}

.bg-dark {
    background: var(--bg-txt-dark);
    background-color: var(--cl-bg-dark);
    background-size: 40rem auto;
}

.hide-mb {
    @include sm {
        display: none !important;
    }
}

.hide-dk {
    @include sm-up {
        display: none !important;
    }
}